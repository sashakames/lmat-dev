### NOTES ON CREATING THE FASTA FILE USED TO GENERAGE DATABASE
### *.fa files were generated by Shea and all related info
### is currently stored here: /usr/mic/post1/metagenomics/ref_sets/fasta/20130206Genes
Build a mapping info
grep ">" Bacteria.genes.fa | perl -ne 'if(/GeneID\|(\d+)/) { chomp; print "$_\t$1\t$1\n";}' > Bacteria.genes.map
grep ">" Viruses.genes.fa | perl -ne 'if(/GeneID\|(\d+)/) { chomp; print "$_\t$1\t$1\n";}' > Viruses.genes.map
grep ">" Protozoa.genes.fa | perl -ne 'if(/GeneID\|(\d+)/) { chomp; print "$_\t$1\t$1\n";}' > Protozoa.genes.map
grep ">" Fungi.genes.fa | perl -ne 'if(/GeneID\|(\d+)/) { chomp; print "$_\t$1\t$1\n";}' > Fungi.genes.map
grep ">" Plasmids.genes.fa | perl -ne 'if(/GeneID\|(\d+)/) { chomp; print "$_\t$1\t$1\n";}' > Plasmids.genes.map

## FORMAT HEADERS IN FASTA FILES
build_header_table.py Bacteria.genes.fa Bacteria.genes.map .
build_header_table.py Viruses.genes.fa Viruses.genes.map .
build_header_table.py Fungi.genes.fa Fungi.genes.map .
build_header_table.py Plasmids.genes.fa Plasmids.genes.map .
build_header_table.py Protozoa.genes.fa Protozoa.genes.map .

### FINAL TOTAL INPUT DB
cat *.int > microbial_genes.fa.int
cat *.map | cut -f2 > microbial_genes.on.dump


launch_prefixCounter.py 4 microbial_genes.fa.int microbial_genes.KmerDB 20
ls -1 msub.* > job_lst.flst
sub_jobs_with_limit.sh --file_lst=job_lst.flst

##After jobs complete for prefixCounter
ls -1 microbial_genes.KmerDB.* > db.flst

##Count the number of k-mers to privide as input to make_db_table
#This turns out to not be helpful for make_db_table since the gnu_hash maxes out at ~4+ billion buckets well below our current working k-mer sizes
run_moab_job.sh --machine=herd --bank=genome --job_str="jellyfish count -s 100000000 -m 20 microbial_genes.fa.int -t 32 -C --stats=stats.microbial_genes.fa.int"

run_moab_job.sh --machine=herd --bank=genome --job_str="/p/lscratchc/allen99/metag/metag_repo/dev/apps/make_db/make_db_table -i db.flst -o microbial_genes.KmerDB.20130225 -k 20 -g -f 32 -s 475"
